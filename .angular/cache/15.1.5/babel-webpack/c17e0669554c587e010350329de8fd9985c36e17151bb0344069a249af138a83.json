{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PhotoService {\n  constructor(http) {\n    this.http = http;\n  }\n  listFromUser(userName) {\n    return this.http.get(`http://localhost:3000/${userName}/photos`);\n  }\n  listFromUserPaginator(userName, page) {\n    const params = new HttpParams().append('page', page.toString());\n    return this.http.get(`http://localhost:3000/${userName}/photos`, {\n      params\n    });\n  }\n}\nPhotoService.ɵfac = function PhotoService_Factory(t) {\n  return new (t || PhotoService)(i0.ɵɵinject(i1.HttpClient));\n};\nPhotoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PhotoService,\n  factory: PhotoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,YAAY,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,yBAAyBD,QAAQ,SAAS,CAAC;EACpF;EACAE,qBAAqB,CAACF,QAAgB,EAAEG,IAAY;IAElD,MAAMC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACU,MAAM,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;IAC/D,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAmB,yBAAyBD,QAAQ,SAAS,EAAE;MAAEI;IAAM,CAAE,CAAC;EAChG;;AAXWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["HttpParams","PhotoService","constructor","http","listFromUser","userName","get","listFromUserPaginator","page","params","append","toString","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ideapad3i\\Desktop\\Estudos\\alura_pic\\src\\app\\photo\\photo.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PhotoInterface } from '../interface/photo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  constructor(private http: HttpClient) { }\n\n  listFromUser(userName: string) {\n    return this.http.get<PhotoInterface[]>(`http://localhost:3000/${userName}/photos`)\n  }\n  listFromUserPaginator(userName: string, page: number) {\n\n    const params = new HttpParams().append('page', page.toString())\n    return this.http.get<PhotoInterface[]>(`http://localhost:3000/${userName}/photos`, { params })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}